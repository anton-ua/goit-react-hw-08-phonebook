{"version":3,"sources":["redux/selectors.js","Services/ProtectedRoute.js","Services/server.js","redux/sessionReducer/sessionActions.js","components/Modal/ModalSettings.js","redux/sessionReducer/sessionOperations.js","components/Nav/Nav.js","pages/HomePage/HomePage.js","Services/ButtonSpiner.js","redux/errorReducer/errorActions.js","components/Login/Login.js","hoc/withAuthRedirect.js","pages/LoginPage/LoginPage.js","components/Signup/Signup.js","pages/SignupPage/SignupPage.js","redux/contactsReducer/contactsActions.js","components/AddContact/AddContact.js","redux/contactsReducer/contactsOperations.js","components/ContactsItem/ContactsItem.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","pages/ContactsPage/ContactsPage.js","App.js","redux/contactsReducer/contactsReducer.js","redux/sessionReducer/sessionReducer.js","redux/loaderReducer/loaderReducer.js","redux/store.js","redux/errorReducer/errorReducer.js","index.js","redux/actionTypes.js"],"names":["getContacts","state","contacts","getFilter","filter","getToken","token","getUser","user","isAuthentificated","authentificated","isLoadingApp","loader","loaderApp","isLoadingButton","loaderButton","isLoadingContacts","loaderContacts","getAuthError","authError","connect","selectors","redirectTo","Component","component","rest","render","props","to","pathname","from","location","setAuthToken","Axios","defaults","headers","common","signupStart","createAction","Type","SIGNUP_START","signupSuccess","SIGNUP_SUCCESS","signupError","SIGNUP_ERROR","loginStart","LOGIN_START","loginSuccess","LOGIN_SUCCESS","loginError","LOGIN_ERROR","getUserStart","GET_USER_START","getUserSuccess","GET_USER_SUCCESS","getUserError","GET_USER_ERROR","logoutStart","LOGOUT_START","logoutSuccess","LOGOUT_SUCCESS","logoutError","LOGOUT_ERROR","deleteUserStart","DELETE_USER_START","deleteUserSuccess","DELETE_USER_SUCCESS","deleteUserError","DELETE_USER_ERROR","ModalSettings","deleteUserCheck","handleChange","target","setState","checked","handleSubmit","e","preventDefault","deleteUserFetch","onHide","prevProps","prevState","this","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","name","Body","email","Form","onSubmit","Group","controlId","Check","type","label","onChange","value","Button","variant","disabled","Footer","onClick","mapDispatchToProps","dispatch","delete","then","catch","error","Navigation","logout","openModal","Navbar","collapseOnSelect","expand","bg","Container","Brand","Toggle","aria-controls","Collapse","Nav","className","exact","NavDropdown","title","Dropdown","Item","as","Divider","HomePage","ButtonSpiner","Spinner","animation","role","aria-hidden","clearAuthError","require","CLEAR_AUTH_ERROR","schema","object","string","required","password","Login","data","loginFetch","validationSchema","initialValues","values","errors","touched","noValidate","Label","Control","placeholder","isInvalid","isValid","Feedback","isError","Alert","text","block","loadingButton","userToLogin","post","withAuthRedirect","BaseComponent","history","replace","Row","lg","Col","min","max","Signup","signupFetch","userToSignup","filterContact","FILTER_CONTACT","getContactsStart","GET_CONTACTS_START","getContactsSucess","GET_CONTACTS_SUCCESS","getContactsError","GET_CONTACTS_ERROR","postContactStart","POST_CONTACT_START","postContactSuccess","POST_CONTACT_SUCCESS","postContactError","POST_CONTACT_ERROR","deleteContactStart","DELETE_CONTACT_START","deleteContactSuccess","DELETE_CONTACT_SUCESS","deleteContactError","DELETE_CONTACT_ERROR","InitialState","number","AddContact","postContact","reset","InputGroup","Prepend","Text","format","mask","allowEmptyFormatting","contact","ContactsItem","deleteContact","ListGroup","href","Filter","autoComplete","ContactsList","fetchContacts","filteredContacts","toLowerCase","includes","filterContacts","length","map","key","get","ContactsPage","md","App","showModalSettings","closeModal","baseURL","getUserFetch","logoutFetch","path","LoginPage","SignupPage","show","getState","contactsReducer","createReducer","payload","filterReducer","tokenReducer","userReducer","combineReducers","persistConfig","storage","whitelist","rootReducer","message","persistedReducer","persistReducer","middlewares","applyMiddleware","thunk","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","loading","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd1d7ced.chunk.js","sourcesContent":["export const getContacts = (state) => state.contacts;\nexport const getFilter = (state) => state.filter;\nexport const getToken = (state) => state.token;\nexport const getUser = (state) => state.user;\nexport const isAuthentificated = (state) => state.authentificated;\nexport const isLoadingApp = (state) => state.loader.loaderApp;\nexport const isLoadingButton = (state) => state.loader.loaderButton;\nexport const isLoadingContacts = (state) => state.loader.loaderContacts;\nexport const getAuthError = (state) => state.authError;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as selectors from \"../redux/selectors\";\n\nconst ProtectedRoute = ({\n  authentificated,\n  redirectTo = \"/login\",\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      authentificated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: redirectTo,\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  authentificated: selectors.isAuthentificated(state),\n});\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import Axios from \"axios\";\n\nexport const setBaseURL = () =>\n  (Axios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\");\n\nexport const setAuthToken = (token) => {\n  Axios.defaults.headers.common[\"Authorization\"] = `${token}`;\n};\n\nexport const clearAuthToken = () => {\n  Axios.defaults.headers.common[\"Authorization\"] = null;\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { Type } from \"../actionTypes\";\n\nexport const signupStart = createAction(Type.SIGNUP_START);\n\nexport const signupSuccess = createAction(Type.SIGNUP_SUCCESS);\n\nexport const signupError = createAction(Type.SIGNUP_ERROR);\n\nexport const loginStart = createAction(Type.LOGIN_START);\n\nexport const loginSuccess = createAction(Type.LOGIN_SUCCESS);\n\nexport const loginError = createAction(Type.LOGIN_ERROR);\n\nexport const getUserStart = createAction(Type.GET_USER_START);\n\nexport const getUserSuccess = createAction(Type.GET_USER_SUCCESS);\n\nexport const getUserError = createAction(Type.GET_USER_ERROR);\n\nexport const logoutStart = createAction(Type.LOGOUT_START);\n\nexport const logoutSuccess = createAction(Type.LOGOUT_SUCCESS);\n\nexport const logoutError = createAction(Type.LOGOUT_ERROR);\n\nexport const deleteUserStart = createAction(Type.DELETE_USER_START);\n\nexport const deleteUserSuccess = createAction(Type.DELETE_USER_SUCCESS);\n\nexport const deleteUserError = createAction(Type.DELETE_USER_ERROR);\n","import React, { Component } from \"react\";\n//redux\nimport { connect } from \"react-redux\";\nimport { deleteUserFetch } from \"../../redux/sessionReducer/sessionOperations\";\n//bootstrap\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nimport PropTypes from \"prop-types\";\n\nclass ModalSettings extends Component {\n  state = {\n    deleteUserCheck: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.deleteUserCheck) {\n      this.setState({\n        deleteUserCheck: false,\n      });\n    }\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      deleteUserCheck: target.checked,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.deleteUserFetch();\n    this.props.onHide();\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {this.props.user.name}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>email: {this.props.user.email}</p>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Check\n                checked={this.state.deleteUserCheck}\n                type=\"checkbox\"\n                label=\"Delete my profile\"\n                onChange={this.handleChange}\n                value={this.state.deleteUserCheck}\n              />\n            </Form.Group>\n            <Button\n              type=\"submit\"\n              variant=\"danger\"\n              disabled={!this.state.deleteUserCheck}\n            >\n              Delete\n            </Button>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nModalSettings.propTypes = {\n  deleteUserFetch: PropTypes.func.isRequired,\n  onHide: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapDispatchToProps = {\n  deleteUserFetch,\n};\n\nexport default connect(null, mapDispatchToProps)(ModalSettings);\n","import Axios from \"axios\";\nimport {\n  signupStart,\n  signupSuccess,\n  signupError,\n  loginStart,\n  loginSuccess,\n  loginError,\n  getUserSuccess,\n  getUserStart,\n  getUserError,\n  logoutStart,\n  logoutError,\n  logoutSuccess,\n  deleteUserStart,\n  deleteUserSuccess,\n  deleteUserError,\n} from \"./sessionActions\";\nimport { setAuthToken } from \"../../Services/server\";\n\nexport const signupFetch = (userToSignup) => (dispatch) => {\n  dispatch(signupStart());\n\n  Axios.post(\"/users/signup\", userToSignup)\n    .then(({ data }) => {\n      setAuthToken(data.token);\n      dispatch(signupSuccess(data));\n    })\n    .catch((error) => dispatch(signupError(error)));\n};\n\nexport const loginFetch = (userToLogin) => (dispatch) => {\n  dispatch(loginStart());\n\n  Axios.post(\"/users/login\", userToLogin)\n    .then(({ data }) => {\n      setAuthToken(data.token);\n      dispatch(loginSuccess(data));\n    })\n    .catch((error) => dispatch(loginError(error)));\n};\n\nexport const getUserFetch = () => (dispatch) => {\n  dispatch(getUserStart());\n\n  Axios.get(\"/users/current\")\n    .then(({ data }) => {\n      dispatch(getUserSuccess(data));\n    })\n    .catch((error) => dispatch(getUserError(error)));\n};\n\nexport const logoutFetch = () => (dispatch, getState) => {\n  dispatch(logoutStart());\n\n  Axios.post(\"/users/logout\")\n    .then(() => {\n      dispatch(logoutSuccess());\n    })\n    .catch((error) => {\n      dispatch(logoutError(error));\n    });\n};\n\nexport const deleteUserFetch = () => (dispatch) => {\n  dispatch(deleteUserStart());\n\n  Axios.delete(\"/users/current\")\n    .then(() => {\n      dispatch(deleteUserSuccess());\n    })\n    .catch((error) => {\n      dispatch(deleteUserError(error));\n    });\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n//bootstrap\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport PropTypes from \"prop-types\";\n\nconst Navigation = ({ user, authentificated, logout, openModal }) => (\n  <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n    <Container>\n      <Navbar.Brand>Phonebook App</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <NavLink to=\"/\" exact className=\"nav-link\">\n            Home\n          </NavLink>\n          {authentificated && (\n            <NavLink to=\"/contacts\" className=\"nav-link\">\n              Contacts\n            </NavLink>\n          )}\n        </Nav>\n        <Nav>\n          {authentificated ? (\n            <NavDropdown title={user.name} id=\"basic-nav-dropdown\">\n              <Dropdown.Item as=\"button\" onClick={openModal}>\n                My profile\n              </Dropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as=\"button\" onClick={logout}>\n                Log Out\n              </NavDropdown.Item>\n            </NavDropdown>\n          ) : (\n            <>\n              <NavLink to=\"/login\" className=\"nav-link\">\n                Login\n              </NavLink>\n              <NavLink to=\"/signup\" className=\"nav-link\">\n                Signup\n              </NavLink>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n);\n\nNavigation.propTypes = {\n  user: PropTypes.object.isRequired,\n  authentificated: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { NavLink } from \"react-router-dom\";\n\nconst HomePage = () => (\n  <Container className=\"pt-4 text-center\">\n    <h2 className=\"mb-5\">Welcome</h2>\n    <p className=\"h5 mb-3\">You can save your contacts with phone number</p>\n    <p className=\"h5\">\n      To use this app, you must to <NavLink to=\"/login\">Login</NavLink> or{\" \"}\n      <NavLink to=\"/signup\">Register</NavLink>\n    </p>\n  </Container>\n);\n\nexport default HomePage;\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst ButtonSpiner = () => (\n  <>\n    <Spinner\n      as=\"span\"\n      animation=\"grow\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n      className=\"mr-2\"\n    />\n    <Spinner\n      as=\"span\"\n      animation=\"grow\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n      className=\"mr-2\"\n    />\n    <Spinner\n      as=\"span\"\n      animation=\"grow\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />\n  </>\n);\n\nexport default ButtonSpiner;\n","const { createAction } = require(\"@reduxjs/toolkit\");\nconst { Type } = require(\"../actionTypes\");\n\nexport const clearAuthError = createAction(Type.CLEAR_AUTH_ERROR);\n","import React, { Component } from \"react\";\n\nimport ButtonSpiner from \"../../Services/ButtonSpiner\";\n//redux\nimport * as selectors from \"../../redux/selectors\";\nimport { connect } from \"react-redux\";\nimport { loginFetch } from \"../../redux/sessionReducer/sessionOperations\";\nimport { clearAuthError } from \"../../redux/errorReducer/errorActions\";\n//bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\n//formik\nimport { Formik } from \"formik\";\nimport { object, string } from \"yup\";\n\nimport PropTypes from \"prop-types\";\n\nconst schema = object({\n  email: string().email(\"Wrong email\").required(\"Enter email\"),\n  password: string().required(\"Enter password\"),\n});\n\nclass Login extends Component {\n  handleSubmit = (data) => {\n    this.props.loginFetch({ ...data });\n  };\n\n  render() {\n    return (\n      <Formik\n        validationSchema={schema}\n        onSubmit={this.handleSubmit}\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n      >\n        {({ handleSubmit, handleChange, values, errors, touched }) => {\n          return (\n            <Form onSubmit={handleSubmit} noValidate>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  isInvalid={errors.email}\n                  isValid={touched.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  isInvalid={errors.password}\n                  isValid={touched.password}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {this.props.authError.isError && (\n                <Alert variant={this.props.authError.type}>\n                  {this.props.authError.text}\n                </Alert>\n              )}\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                block\n                disabled={this.props.loadingButton}\n              >\n                {this.props.loadingButton ? <ButtonSpiner /> : <>Login</>}\n              </Button>\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loadingButton: PropTypes.bool.isRequired,\n  authError: PropTypes.object.isRequired,\n  loginFetch: PropTypes.func.isRequired,\n  clearAuthError: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingButton: selectors.isLoadingButton(state),\n  authError: selectors.getAuthError(state),\n});\n\nconst mapDispatchToProps = { loginFetch, clearAuthError };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport * as selectors from \"../redux/selectors\";\nimport { connect } from \"react-redux\";\n\nimport PropTypes from \"prop-types\";\n\nconst withAuthRedirect = (BaseComponent) => {\n  class withAuthRedirect extends Component {\n    componentDidUpdate() {\n      if (!this.props.authentificated) {\n        return;\n      }\n\n      this.props.history.replace(\"/contacts\");\n    }\n    componentDidMount() {\n      if (!this.props.authentificated) {\n        return;\n      }\n\n      this.props.history.replace(\"/contacts\");\n    }\n\n    render() {\n      return <BaseComponent {...this.props} />;\n    }\n  }\n\n  withAuthRedirect.propTypes = {\n    authentificated: PropTypes.bool.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  const mapStateToProps = (state) => ({\n    authentificated: selectors.isAuthentificated(state),\n  });\n\n  return connect(mapStateToProps)(withAuthRedirect);\n};\n\nexport default withAuthRedirect;\n","import React from \"react\";\nimport Login from \"../../components/Login/Login\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\n\nconst LoginPage = () => (\n  <Container className=\"pt-4\">\n    <Row lg={6} className=\"justify-content-center\">\n      <Col lg={4}>\n        <h3 className=\"text-center\">Login</h3>\n        <Login />\n        <p className=\"mt-4 text-center\">\n          or&nbsp;\n          <NavLink to=\"/signup\">Register</NavLink>\n        </p>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default withAuthRedirect(LoginPage);\n","import React, { Component } from \"react\";\n\nimport ButtonSpiner from \"../../Services/ButtonSpiner\";\n//redux\nimport { connect } from \"react-redux\";\nimport { signupFetch } from \"../../redux/sessionReducer/sessionOperations\";\nimport * as selectors from \"../../redux/selectors\";\n//bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\n//formik\nimport { Formik } from \"formik\";\nimport { object, string } from \"yup\";\n\nimport PropTypes from \"prop-types\";\n\nconst schema = object({\n  name: string()\n    .min(4, \"From 4 to 12 symbols\")\n    .max(12, \"From 4 to 12 symbols\")\n    .required(\"Enter name\"),\n  email: string().email(\"Wrong email\").required(\"Enter email\"),\n  password: string()\n    .min(6, \"Too short password\")\n    .max(12, \"Too long password\")\n    .required(\"Enter password\"),\n});\n\nclass Signup extends Component {\n  handleSubmit = (data) => {\n    this.props.signupFetch({ ...data });\n  };\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <Formik\n        validationSchema={schema}\n        onSubmit={this.handleSubmit}\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n        }}\n      >\n        {({ handleSubmit, handleChange, values, errors, touched }) => {\n          return (\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"formName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"username\"\n                  name=\"name\"\n                  placeholder=\"Enter name\"\n                  value={values.name}\n                  onChange={handleChange}\n                  isInvalid={errors.name}\n                  isValid={touched.name}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.name}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"formEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  isInvalid={errors.email}\n                  isValid={touched.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"formPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enter password from 6 to 12 symbols\"\n                  value={values.password}\n                  onChange={handleChange}\n                  isInvalid={errors.password}\n                  isValid={touched.password}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {this.props.authError.isError && (\n                <Alert variant={this.props.authError.type}>\n                  {this.props.authError.text}\n                </Alert>\n              )}\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                block\n                disabled={this.props.loadingButton}\n              >\n                {this.props.loadingButton ? <ButtonSpiner /> : <>Sign up</>}\n              </Button>\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nSignup.propTypes = {\n  loadingButton: PropTypes.bool.isRequired,\n  authError: PropTypes.object.isRequired,\n  signupFetch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingButton: selectors.isLoadingButton(state),\n  authError: selectors.getAuthError(state),\n});\n\nconst mapDispatchToProps = { signupFetch };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React from \"react\";\nimport Signup from \"../../components/Signup/Signup\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\n\nconst SignupPage = () => (\n  <Container className=\"pt-4\">\n    <Row lg={6} className=\"justify-content-center\">\n      <Col lg={4}>\n        <h3 className=\"text-center\">Register</h3>\n        <Signup />\n        <p className=\"mt-4 text-center\">\n          or&nbsp;\n          <NavLink to=\"/login\">Login</NavLink>\n        </p>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default withAuthRedirect(SignupPage);\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { Type } from \"../actionTypes\";\n\nexport const filterContact = createAction(Type.FILTER_CONTACT);\n\nexport const getContactsStart = createAction(Type.GET_CONTACTS_START);\n\nexport const getContactsSucess = createAction(Type.GET_CONTACTS_SUCCESS);\n\nexport const getContactsError = createAction(Type.GET_CONTACTS_ERROR);\n\nexport const postContactStart = createAction(Type.POST_CONTACT_START);\n\nexport const postContactSuccess = createAction(Type.POST_CONTACT_SUCCESS);\n\nexport const postContactError = createAction(Type.POST_CONTACT_ERROR);\n\nexport const deleteContactStart = createAction(Type.DELETE_CONTACT_START);\n\nexport const deleteContactSuccess = createAction(Type.DELETE_CONTACT_SUCESS);\n\nexport const deleteContactError = createAction(Type.DELETE_CONTACT_ERROR);\n","import React, { Component } from \"react\";\nimport ButtonSpiner from \"../../Services/ButtonSpiner\";\n//redux\nimport { connect } from \"react-redux\";\nimport { postContact } from \"../../redux/contactsReducer/contactsOperations\";\nimport * as selectors from \"../../redux/selectors\";\n//bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport NumberFormat from \"react-number-format\";\nimport PropTypes from \"prop-types\";\n\nconst InitialState = { name: \"\", number: \"\" };\n\nclass AddContact extends Component {\n  state = InitialState;\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (!name) {\n      return;\n    }\n\n    if (!number) {\n      return;\n    }\n\n    this.props.postContact({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState(InitialState);\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"mb-4\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Name</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </InputGroup>\n\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Number</InputGroup.Text>\n          </InputGroup.Prepend>\n\n          <NumberFormat\n            className=\"form-control\"\n            name=\"number\"\n            format=\"+380 (##) ###-##-##\"\n            mask=\"_\"\n            allowEmptyFormatting\n            onChange={this.handleChange}\n            value={number}\n          />\n        </InputGroup>\n\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          block\n          disabled={this.props.loadingButton}\n        >\n          {this.props.loadingButton ? <ButtonSpiner /> : <>Add Contact</>}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  loadingButton: PropTypes.bool.isRequired,\n  postContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loadingButton: selectors.isLoadingButton(state),\n});\n\nconst mapDispatchToProps = { postContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\n","import Axios from \"axios\";\nimport {\n  getContactsStart,\n  getContactsSucess,\n  getContactsError,\n  postContactStart,\n  postContactSuccess,\n  postContactError,\n  deleteContactStart,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contactsActions\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(getContactsStart());\n\n  Axios.get(\"/contacts\")\n    .then(({ data }) => dispatch(getContactsSucess(data)))\n    .catch((error) => dispatch(getContactsError(error)));\n};\n\nexport const postContact = (contact) => (dispatch) => {\n  dispatch(postContactStart());\n\n  Axios.post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(postContactSuccess(data)))\n    .catch((error) => dispatch(postContactError(error)));\n};\n\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactStart());\n\n  Axios.delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//bootstrap\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nconst ContactsItem = ({ name, number, id, deleteContact }) => {\n  const del = () => deleteContact(id);\n\n  return (\n    <ListGroup.Item as=\"li\">\n      <span className=\"font-weight-bold mr-3\">{name}</span>\n      <a href={`tel:${number}`} className=\"mr-3\">\n        {number}\n      </a>\n      <Button variant=\"danger\" onClick={del}>\n        X\n      </Button>\n    </ListGroup.Item>\n  );\n};\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import React, { Component } from \"react\";\n//redux\nimport { filterContact } from \"../../redux/contactsReducer/contactsActions\";\nimport * as selectors from \"../../redux/selectors\";\nimport { connect } from \"react-redux\";\n//bootstrap\nimport Form from \"react-bootstrap/Form\";\n\nimport PropTypes from \"prop-types\";\n\nclass Filter extends Component {\n  render() {\n    return (\n      <Form className=\"mb-2\">\n        <Form.Group controlId=\"formBasicFilter\">\n          <Form.Control\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Filter...\"\n            value={this.props.filter}\n            onChange={(e) => this.props.filterContact(e.target.value)}\n            autoComplete=\"off\"\n          />\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  filter: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  filterContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\n\nimport ContactsItem from \"../ContactsItem/ContactsItem\";\nimport Filter from \"../../components/Filter/Filter\";\n//redux\nimport { connect } from \"react-redux\";\nimport {\n  fetchContacts,\n  deleteContact,\n} from \"../../redux/contactsReducer/contactsOperations\";\nimport * as selectors from \"../../redux/selectors\";\n//bootstrap\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport PropTypes from \"prop-types\";\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nclass ContactsList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, filter } = this.props;\n\n    const filteredContacts = filter\n      ? filterContacts(contacts, filter)\n      : contacts;\n\n    return (\n      <>\n        {this.props.loaderContacts && (\n          <Container className=\"pt-4\">\n            <Row className=\"justify-content-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          </Container>\n        )}\n\n        {!this.props.loaderContacts && (\n          <>\n            {contacts.length > 2 && <Filter />}\n            <ListGroup as=\"ul\">\n              {filteredContacts.length > 0 ? (\n                filteredContacts.map(({ id, name, number }) => (\n                  <ContactsItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                    deleteContact={this.props.deleteContact}\n                  />\n                ))\n              ) : (\n                <h4>You have no contacts yet</h4>\n              )}\n            </ListGroup>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  loaderButton: PropTypes.bool.isRequired,\n  loaderContacts: PropTypes.bool.isRequired,\n  fetchContacts: PropTypes.func.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n  filter: selectors.getFilter(state),\n  loaderButton: selectors.isLoadingButton(state),\n  loaderContacts: selectors.isLoadingContacts(state),\n});\n\nconst mapDispatchToProps = { fetchContacts, deleteContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport AddContact from \"../../components/AddContact/AddContact\";\nimport ContactsList from \"../../components/ContactsList/ContactsList\";\n\nconst ContactsPage = () => (\n  <Container className=\"pt-4\">\n    <Row className=\"justify-content-center\">\n      <Col>\n        <h3 className=\"text-center\">Contacts</h3>\n      </Col>\n    </Row>\n    <Row>\n      <Col md={5}>\n        <AddContact />\n      </Col>\n      <Col md=\"7\">\n        <ContactsList />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default ContactsPage;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./Services/ProtectedRoute\";\nimport { setBaseURL, setAuthToken } from \"./Services/server\";\n\nimport ModalSettings from \"./components/Modal/ModalSettings\";\nimport Navigation from \"./components/Nav/Nav\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport SignupPage from \"./pages/SignupPage/SignupPage\";\nimport ContactsPage from \"./pages/ContactsPage/ContactsPage\";\n//redux\nimport * as selectors from \"./redux/selectors\";\nimport {\n  getUserFetch,\n  logoutFetch,\n} from \"./redux/sessionReducer/sessionOperations\";\nimport { connect } from \"react-redux\";\n//bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport PropTypes from \"prop-types\";\n\nclass App extends Component {\n  state = {\n    showModalSettings: false,\n  };\n\n  componentDidMount() {\n    setBaseURL();\n\n    if (this.props.token) {\n      setAuthToken(this.props.token);\n      this.props.getUserFetch();\n    }\n  }\n\n  openModal = () => {\n    this.setState({ showModalSettings: true });\n  };\n\n  closeModal = () => {\n    this.setState({ showModalSettings: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Navigation\n          user={this.props.user}\n          authentificated={this.props.authentificated}\n          logout={this.props.logoutFetch}\n          openModal={this.openModal}\n        />\n        {this.props.loaderApp ? (\n          <Container className=\"pt-4\">\n            <Row className=\"justify-content-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          </Container>\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <ProtectedRoute path=\"/contacts\" component={ContactsPage} />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/signup\" component={SignupPage} />\n          </Switch>\n        )}\n        <ModalSettings\n          show={this.state.showModalSettings}\n          onHide={this.closeModal}\n          user={this.props.user}\n        />\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  user: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  authentificated: PropTypes.bool.isRequired,\n  loaderApp: PropTypes.bool.isRequired,\n  getUserFetch: PropTypes.func.isRequired,\n  logoutFetch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: selectors.getUser(state),\n  token: selectors.getToken(state),\n  authentificated: selectors.isAuthentificated(state),\n  loaderApp: selectors.isLoadingApp(state),\n});\n\nconst mapDispatchToProps = { getUserFetch, logoutFetch };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { Type } from \"../actionTypes\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const contactsReducer = createReducer([], {\n  [Type.GET_CONTACTS_SUCCESS]: (state, { payload }) => payload,\n  [Type.POST_CONTACT_SUCCESS]: (state, { payload }) => [...state, payload],\n  [Type.DELETE_CONTACT_SUCESS]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [Type.LOGOUT_SUCCESS]: () => \"\",\n  [Type.DELETE_USER_SUCCESS]: () => \"\",\n});\n\nexport const filterReducer = createReducer(\"\", {\n  [Type.FILTER_CONTACT]: (state, { payload }) => payload,\n  [Type.LOGOUT_SUCCESS]: () => \"\",\n  [Type.DELETE_USER_SUCCESS]: () => \"\",\n});\n","import { Type } from \"../actionTypes\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const tokenReducer = createReducer(\"\", {\n  [Type.SIGNUP_SUCCESS]: (state, { payload }) => payload.token,\n  [Type.LOGIN_SUCCESS]: (state, { payload }) => payload.token,\n  [Type.LOGOUT_SUCCESS]: () => \"\",\n  [Type.DELETE_USER_SUCCESS]: () => \"\",\n});\n\nexport const userReducer = createReducer(\"\", {\n  [Type.SIGNUP_SUCCESS]: (state, { payload }) => payload.user,\n  [Type.LOGIN_SUCCESS]: (state, { payload }) => payload.user,\n  [Type.GET_USER_SUCCESS]: (state, { payload }) => payload,\n  [Type.LOGOUT_SUCCESS]: () => \"\",\n  [Type.DELETE_USER_SUCCESS]: () => \"\",\n});\n\nexport const authentificated = (state = false, { type }) => {\n  switch (type) {\n    case Type.LOGIN_SUCCESS:\n    case Type.SIGNUP_SUCCESS:\n    case Type.GET_USER_SUCCESS:\n      return true;\n\n    case Type.LOGOUT_SUCCESS:\n    case Type.DELETE_USER_SUCCESS:\n      return false;\n\n    default:\n      return state;\n  }\n};\n","import { Type } from \"../actionTypes\";\nimport { combineReducers } from \"redux\";\n\nconst loaderApp = (state = false, { type }) => {\n  switch (type) {\n    case Type.LOGOUT_START:\n    case Type.GET_USER_START:\n    case Type.DELETE_USER_START:\n      return true;\n\n    case Type.LOGOUT_SUCCESS:\n    case Type.LOGOUT_ERROR:\n    case Type.GET_USER_SUCCESS:\n    case Type.GET_USER_ERROR:\n    case Type.DELETE_USER_SUCCESS:\n    case Type.DELETE_USER_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst loaderButton = (state = false, { type }) => {\n  switch (type) {\n    case Type.LOGIN_START:\n    case Type.SIGNUP_START:\n    case Type.POST_CONTACT_START:\n      return true;\n\n    case Type.LOGIN_SUCCESS:\n    case Type.LOGIN_ERROR:\n    case Type.SIGNUP_SUCCESS:\n    case Type.SIGNUP_ERROR:\n    case Type.POST_CONTACT_SUCCESS:\n    case Type.POST_CONTACT_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst loaderContacts = (state = false, { type }) => {\n  switch (type) {\n    case Type.GET_CONTACTS_START:\n      return true;\n\n    case Type.GET_CONTACTS_SUCCESS:\n    case Type.GET_CONTACTS_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst loader = combineReducers({\n  loaderApp,\n  loaderButton,\n  loaderContacts,\n});\n\nexport default loader;\n","import {\n  createStore,\n  applyMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport {\n  contactsReducer,\n  filterReducer,\n} from \"./contactsReducer/contactsReducer\";\nimport {\n  tokenReducer,\n  userReducer,\n  authentificated,\n} from \"./sessionReducer/sessionReducer\";\nimport loader from \"./loaderReducer/loaderReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { authError } from \"./errorReducer/errorReducer\";\n\nconst persistConfig = {\n  key: \"session\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  token: tokenReducer,\n  user: userReducer,\n  authentificated,\n  authError,\n  loader,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middlewares = applyMiddleware(thunk);\n\nexport const store = createStore(\n  persistedReducer,\n  composeWithDevTools(middlewares)\n);\n\nexport const persistor = persistStore(store);\n","import { Type } from \"../actionTypes\";\n\nexport const authError = (state = { isError: false }, { type, payload }) => {\n  switch (type) {\n    case Type.LOGIN_ERROR:\n    case Type.SIGNUP_ERROR:\n      return { isError: true, type: \"danger\", text: payload.message };\n\n    case Type.CLEAR_AUTH_ERROR:\n      return { isError: false };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter basename=\"/goit-react-hw-08-phonebook\">\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const Type = {\n  FILTER_CONTACT: \"FILTER_CONTACT\",\n  GET_CONTACTS_START: \"GET_CONTACTS_START\",\n  GET_CONTACTS_SUCCESS: \"GET_CONTACTS_SUCCES\",\n  GET_CONTACTS_ERROR: \"GET_CONTACTS_ERROR\",\n  POST_CONTACT_START: \"POST_CONTACT_START\",\n  POST_CONTACT_SUCCESS: \"POST_CONTACT_SUCCESS\",\n  POST_CONTACT_ERROR: \"POST_CONTACT_ERROR\",\n  DELETE_CONTACT_START: \"DELETE_CONTACT_START\",\n  DELETE_CONTACT_SUCESS: \"DELETE_CONTACT_SUCESS\",\n  DELETE_CONTACT_ERROR: \"DELETE_CONTACT_ERROR\",\n  SIGNUP_START: \"SIGNUP_START\",\n  SIGNUP_SUCCESS: \"SIGNUP_SUCCESS\",\n  SIGNUP_ERROR: \"SIGNUP_ERROR\",\n  LOGIN_START: \"LOGIN_START\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_ERROR: \"LOGIN_ERROR\",\n  GET_USER_START: \"GET_USER_START\",\n  GET_USER_SUCCESS: \"GET_USER_SUCCESS\",\n  GET_USER_ERROR: \"GET_USER_ERROR\",\n  LOGOUT_START: \"LOGOUT_START\",\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\n  LOGOUT_ERROR: \"LOGOUT_ERROR\",\n  DELETE_USER_START: \"DELETE_USER_START\",\n  DELETE_USER_SUCCESS: \"DELETE_USER_SUCCESS\",\n  DELETE_USER_ERROR: \"DELETE_USER_ERROR\",\n  CLEAR_AUTH_ERROR: \"CLEAR_AUTH_ERROR\",\n};\n"],"sourceRoot":""}